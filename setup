
#!/bin/bash

pprint (){
	cred='\033[0;31m'
	cgreen='\033[0;32m'
	cyellow='\033[0;33m'
	cblue='\033[0;34m'
	cpurple='\033[0;35m'
	eval "export color='$cpurple'"
	[ ! -z $2 ] && eval "export color=\"\$$2\""
    printf "$color $1"
}

color_reset(){ printf '\033[0;37m';}

yesnoprompt(){
	old_stty_cfg=$(stty -g)
	stty raw -echo ; answer=$(head -c 1)
	stty $old_stty_cfg
	echo "$answer" | grep -iq "^y"
}

update() {
	pprint "\n\nU·¥ò·¥Ö·¥Ä·¥õ…™…¥…¢ P·¥Ä·¥Ñ·¥ã·¥Ä…¢·¥ás.. "
	sudo apt update 2>&1 | grep "can be upgraded" &>/dev/null
	if [ $? -eq 0 ]; then
		pprint "U·¥ò·¥Ö·¥Ä·¥õ·¥ás A·¥†·¥Ä…™ ü·¥Ä ô ü·¥á" "cgreen"
		pprint "\n\D·¥è Y·¥è·¥ú W·¥Ä…¥·¥õ T·¥è D·¥è U·¥ò·¥Ö·¥Ä·¥õ·¥á ? (y/n)?"
		if yesnoprompt; then
			pprint "\n\nU·¥ò…¢ Ä·¥Ä·¥Ö…™…¥…¢ P·¥Ä·¥Ñ·¥ã·¥Ä…¢·¥ás"
			sudo apt upgrade -y &>/dev/null &&
			pprint "üá©‚Ääüá¥‚Ääüá≥‚Ääüá™‚Ää‚úÖ!\n\n" "cgreen" || (pprint "üá´‚Ääüá¶‚ÄäüáÆ‚Ääüá±‚Ää‚ùé.\n\n" "cred"; exit 1)
		else
			echo
		fi
	else
		pprint "\nüá¶ùê•ùê´ùêûùêöùêùùê≤ üá∫ùê© üáπùê® üá©ùêöùê≠ùêû\n\n" "cgreen"
	fi
}

packages(){
	if ! command -v pip &>/dev/null; then
		pprint "·¥Ñ·¥è·¥ú ü·¥Ö …¥·¥è·¥õ “ì…™…¥·¥Ö ·¥ò…™·¥ò, I…¥s·¥õ·¥Ä ü ü…™…¥…¢ N·¥è·¥°"
		sudo apt install python3-pip -y 2>pypilog.txt 1>/dev/null &&
		pprint "D·¥è…¥·¥á‚úî.\n\n" "cgreen" || (pprint "F·¥Ä…™ ü·¥á·¥Ö.\n\n" "cred"; exit 1)
	fi

	if ! command -v ffmpeg &>/dev/null; then
		pprint "C·¥è·¥ú ü·¥Ö N·¥è·¥õ F·¥è·¥ú…¥·¥Ö F“ì·¥ç·¥ò·¥á…¢, I…¥s·¥õ·¥Ä ü ü…™…¥…¢.."
		if sudo apt install ffmpeg -y &>/dev/null;then
			pprint "D·¥è…¥·¥á‚Ää.\n\n" "cgreen"
		else
			pprint "F·¥Ä…™ ü·¥á·¥Ö.\n\n" "cred"
			pprint "You need to install ffmpeg manually in order to deploy VipX Music, exiting...\n" "cblue"
			exit 1
		fi
	fi

	# Check ffmpeg version and warn user if necessary.
	fv=$(grep -Po 'version (3.*?) ' <<< $(ffmpeg -version)) &&
	pprint "Playing live streams not going to work since you have ffmpeg $fv, live streams are supported by version 4+.\n" "cblue"
}


node(){
	command -v npm &>/dev/null && return
	pprint "I…¥s·¥õ·¥Ä ü ü…™…¥…¢ N·¥è·¥Ö·¥á·¥äs A…¥·¥Ö N·¥ò·¥ç "
	curl -fssL https://deb.nodesource.com/setup_18.x | sudo -E bash - &>nodelog.txt &&
	sudo apt install nodejs -y &>>nodelog.txt &&
	sudo npm i -g npm &>>nodelog.txt &&
	pprint "ùó¶ùòÇùó∞ùó∞ùó≤ùòÄùòÄ!\n" "cgreen" || (pprint "FAIL.\n" "cred"; exit 1)
}


installation(){
	pprint "\n\nùó®ùóΩùó¥ùóøùóÆùó±ùó∂ùóªùó¥ ùóΩùó∂ùóΩ ùóîùóªùó± ùóúùóªùòÄùòÅùóÆùóπùóπùó∂ùóªùó¥ ùóóùó≤ùóΩùó≤ùóªùó±ùó≤ùó∞ùòÜ ùó£ùóÆùó∏ùóÆùó¥ùó≤ùòÄüìç..."
	pip3 install -U pip &>>pypilog.txt &&
	pip3 install -U -r requirements.txt &>>pypilog.txt &&
	pprint "D·¥è…¥·¥áüíû.\n" "cgreen" && return
	pprint "F·¥Ä…™ ü·¥á·¥Öüò≠.\n" "cred"
	exit 1
}

clear
pprint "W·¥á ü·¥Ñ·¥è·¥ç·¥á T·¥è S·¥á·¥õ·¥ú·¥ò I…¥s·¥õ·¥Ä ü ü·¥á Ä\n\n"
pprint "üíùIs Y·¥è·¥ú S·¥á·¥á A…¥ è E Ä Ä·¥è Ä W ú·¥á…¥ S·¥á·¥õ·¥ú·¥ò, R·¥á“ì·¥á Ä T·¥è T ú·¥ás·¥á L·¥è…¢s:üáÆüá≥ "
pprint "\n‚ô•F·¥è Ä N·¥è·¥Ö·¥áJs E Ä Ä·¥è Ä, C ú·¥á·¥Ñ·¥ã nodejs.txtüóØ"
pprint "\nü§çF·¥è Ä P è·¥ò…™ E Ä Ä·¥è Ä, C ú·¥á·¥Ñ·¥ã pylogs.txtüí≠"
sleep 1
pprint "\n\I N·¥á·¥á·¥Ö S·¥ú·¥Ö·¥è P Ä…™·¥†…™ ü·¥á…¢ T·¥è W·¥è Ä·¥ã A…¥·¥Ö S·¥á·¥õ·¥ú·¥ò .\n"
sudo test

update
packages
node
installation
pprint "\n\n\n\n\nIs ú…™·¥õ·¥Ä x M·¥ús…™·¥Ñ B·¥è·¥õ‚Ää" "cgreen"
sleep 1
clear

pptint "\n\n\n\n\nIs ú…™·¥õ·¥Ä"
clear
pprint "\n\n\n\n\n    M·¥ús…™·¥Ñ"
clear
pprint "\n\n\n\n\n          B·¥è·¥õ"
clear
pprint "                      Is ú…™·¥õ·¥Ä M·¥ús…™·¥Ñ B·¥è·¥õ‚Ää"
pprint "\n\nùêÑùêßùê≠ùêûùê´ ùêòùê®ùêÆùê´ ùêÅùê®ùê≠ ùêÉùêöùê≠ùêö ùêÅùêûùê•ùê®ùê∞\n\n\n"
pprint "\nùóîùó£ùóú ùóúùóó:- "; color_reset; read api_id
pprint "\nùóîùó£ùóú ùóõùóîùó¶ùóõ:- "; color_reset; read api_hash
pprint "\nùóïùó¢ùóß ùóßùó¢ùóûùóòùó°:- "; color_reset; read bot_token
pprint "\nùó¢ùó™ùó°ùóòùó• ùóúùóó:- "; color_reset; read ownid
pprint "\nùóïùó¢ùóß ùó°ùóîùó†ùóò:- "; color_reset; read mbt
pprint "\nùó†ùó¢ùó°ùóöùó¢ ùóóùóï:- "; color_reset; read mongo_db
pprint "\nùóüùó¢ùóö ùóöùó•ùó¢ùó®ùó£ ùóúùóó:- "; color_reset; read logger
pprint "\nùó¶ùóßùó•ùóúùó°ùóö ùó¶ùóòùó¶ùó¶ùóúùó¢ùó°:- "; color_reset; read string_session
pprint "\nùóöùó•ùó¢ùó®ùó£ ùó®ùó¶ùóòùó•ùó°ùóîùó†ùóò:- "; color_reset; read group_username
pprint "\nùóñùóõùóîùó°ùó°ùóòùóü ùó®ùó¶ùóòùó•ùó°ùóîùó†ùóò:- "; color_reset; read channel_username

pprint "\n\ùêßW·¥Ä…™·¥õ A S·¥á·¥Ñ·¥è…¥·¥Ö, L·¥è·¥Ä·¥Ö…™…¥…¢ Y·¥è·¥ú Ä P Ä·¥á·¥õ·¥õ è V·¥Ä Äs" "cgreen"

if [ -f .env ]; then
	rm .env
fi

echo """API_ID = $api_id
API_HASH = $api_hash
BOT_TOKEN = $bot_token
MONGO_DB_URI = $mongo_db
LOG_GROUP_ID = $logger
GROUP_USERNAME = $group_username
CHANNEL_USERNAME = $channel_username
MUSIC_BOT_NAME = $mbt
STRING_SESSION = $string_session
OWNER_ID = $ownid""" > .env
clear

pprint "\n\n\n\n\\nS·¥õ·¥Ä Ä·¥õ T ú·¥á B·¥è·¥õ J·¥ús·¥õ B è T·¥°·¥è C·¥è·¥ç·¥ç·¥Ä…¥·¥Ös \n\n 1s·¥õ C·¥è·¥ç·¥ç·¥Ä…¥·¥Ö:- tmux \n 2…¥·¥Ö C·¥è·¥ç·¥ç·¥Ä…¥·¥Ö:- bash start\n\n"
